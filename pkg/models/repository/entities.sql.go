// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: entities.sql

package repository

import (
	"context"
)

const getEntities = `-- name: GetEntities :many
SELECT id, name, faction FROM "entities"
`

func (q *Queries) GetEntities(ctx context.Context) ([]Entities, error) {
	rows, err := q.db.QueryContext(ctx, getEntities)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Entities
	for rows.Next() {
		var i Entities
		if err := rows.Scan(&i.ID, &i.Name, &i.Faction); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getEntity = `-- name: GetEntity :one
SELECT id, name, faction FROM "entities" WHERE id = ?
`

func (q *Queries) GetEntity(ctx context.Context, id int64) (Entities, error) {
	row := q.db.QueryRowContext(ctx, getEntity, id)
	var i Entities
	err := row.Scan(&i.ID, &i.Name, &i.Faction)
	return i, err
}
